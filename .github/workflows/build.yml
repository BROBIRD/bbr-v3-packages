name: Build Package

on:
  workflow_dispatch:

env:
  SCCACHE_CACHE_SIZE: 5G
  SCCACHE_DIR: ~/.cache/sccache

jobs:
    build:
      runs-on: ubuntu-latest
      steps:
        - name: Checkout
          uses: actions/checkout@v3
          with:
            repository: google/bbr
            ref: v3
            path: bbr

        - name: Get current time
          id: time
          run: echo "time=$(date -u "+%Y-%m-%d-%H%M%S")" >> $GITHUB_OUTPUT

        - name: Setup dependencies
          run: |
            sudo apt-get update
            sudo apt-fast install -y build-essential \
              bc kmod cpio flex libncurses5-dev \
              libelf-dev libssl-dev dwarves bison debhelper \
              gawk openssl libssl-dev dkms libudev-dev \
              libpci-dev libiberty-dev autoconf \
              gcc-13 rpm
        
        - name: Setup sccache
          uses: mozilla-actions/sccache-action@v0.0.3

        - name: Setup cache
          uses: actions/cache@v3
          with:
            path: ${{ env.SCCACHE_DIR }}
            key: sccache-${{ hashFiles('bbr/.config') }}
        
        - name: Build
          working-directory: bbr
          run: |
            # Manual set deb compression to xz
            export KDEB_COMPRESS="xz"
            # Download .config
            curl -sSL https://raw.githubusercontent.com/Zxilly/bbr-v3-deb/master/.config > .config
            make prepare
            # Build
            nice make \
              LOCALVERSION="" \
              CC="sccache gcc-13" \
              -j`nproc` \
              bindeb-pkg
            nice make \
              LOCALVERSION="" \
              CC="sccache gcc-13" \
              -j`nproc` \
              binrpm-pkg
        
        - name: Upload config
          uses: actions/upload-artifact@v3
          with:
            name: config
            path: bbr/.config

        - name: Release
          uses: ncipollo/release-action@v1
          with:
            artifacts: "linux-*.deb,/home/runner/rpmbuild/RPMS/x86_64/*.rpm"
            prerelease: true
            tag: ${{ steps.time.outputs.time }}
        
