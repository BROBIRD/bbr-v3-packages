name: Build Package

on:
  workflow_dispatch:
    inputs:
      release:
        type: choice
        description: Release type
        options:
          - none
          - pre-release
          - release

# env:
#   SCCACHE_CACHE_SIZE: 1G
#   SCCACHE_DIR: /home/runner/.cache/sccache

jobs:
    build:
      runs-on: ubuntu-22.04
      steps:
        - name: Checkout
          uses: actions/checkout@v3
          with:
            repository: google/bbr
            ref: v3
            path: bbr

        - name: Get current time
          id: time
          run: |
            sudo timedatectl set-timezone Asia/Shanghai
            echo "time=$(date "+%Y-%m-%d-%H%M%S-%Z")" >> $GITHUB_OUTPUT

        # - name: Setup dependencies
        #   run: |
        #     sudo apt-get update
        #     sudo apt-fast install -y build-essential \
        #       bc kmod cpio flex libncurses5-dev \
        #       libelf-dev libssl-dev dwarves bison debhelper \
        #       gawk openssl libssl-dev dkms libudev-dev \
        #       libpci-dev libiberty-dev autoconf \
        #       gcc-13
        
        # - name: Setup sccache
        #   uses: mozilla-actions/sccache-action@v0.0.3

        - name: Get .config
          run: curl -sSL https://raw.githubusercontent.com/BROBIRD/bbr-v3-pkg/docker-test/Debian-Vultr.config > bbr/.config

        # - name: Setup cache
        #   uses: actions/cache@v3
        #   with:
        #     path: /home/runner/.cache/sccache
        #     key: sccache-${{ hashFiles('bbr/.config') }}
        
        # - name: Build
        #   working-directory: bbr
        #   run: |
        #     # Manual set deb compression to xz
        #     export KDEB_COMPRESS="xz"
        #     make prepare
        #     # Build
        #     nice make \
        #       LOCALVERSION="" \
        #       CC="sccache gcc-13" \
        #       -j`nproc` \
        #       bindeb-pkg
        #     nice make \
        #       LOCALVERSION="" \
        #       CC="sccache gcc-13" \
        #       -j`nproc` \
        #       binrpm-pkg
        
        # - name: Upload config
        #   uses: actions/upload-artifact@v3
        #   with:
        #     name: config
        #     path: bbr/.config

        - name: Build in Docker
          uses: uraimo/run-on-arch-action@v2
          id: build
          with: 
            arch: none
            distro: none
            base_image: --platform=linux/amd64 debian:bookworm-slim
            dockerRunArgs: |
              --volume "${PWD}/bbr:/root/bbr"
            shell: /bin/bash
            install: |
              apt-get update -q -y
              apt-get install -q -y build-essential \
                bc kmod flex libncurses5-dev \
                libelf-dev libssl-dev dwarves bison debhelper \
                gawk openssl libssl-dev dkms libudev-dev \
                libpci-dev libiberty-dev autoconf
            run: |
              cd bbr
              export KDEB_COMPRESS="xz"
              make prepare
              make \
              LOCALVERSION="" \
              -j`nproc` \
              bindeb-pkg
              cp ../linux-*.deb ./

        
        - name: Upload deb
          uses: actions/upload-artifact@v3
          with:
            name: deb
            path: linux-*.deb
        
        # - name: Upload rpm
        #   uses: actions/upload-artifact@v3
        #   with:
        #     name: rpm
        #     path: /home/runner/rpmbuild/RPMS/x86_64/*.rpm

        - name: Release
          if: ${{ github.event.inputs.release != 'none' }}
          uses: ncipollo/release-action@v1
          with:
            artifacts: "linux-*.deb,/home/runner/rpmbuild/RPMS/x86_64/*.rpm"
            prerelease: ${{ github.event.inputs.release == 'pre-release' }}
            makeLatest: ${{ github.event.inputs.release == 'release' }}
            tag: ${{ steps.time.outputs.time }}
        
